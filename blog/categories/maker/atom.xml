<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类:maker | 番茄手册]]></title>
  <link href="http://www.newtomato.me/blog/categories/maker/atom.xml" rel="self"/>
  <link href="http://www.newtomato.me/"/>
  <updated>2017-12-16T00:04:11+08:00</updated>
  <id>http://www.newtomato.me/</id>
  <author>
    <name><![CDATA[newtomato]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Game Maker：blend mode遮挡效果]]></title>
    <link href="http://www.newtomato.me/blog/2017/11/05/blend-modezhe-dang-xiao-guo"/>
    <updated>2017-11-05T22:29:12+08:00</updated>
    <id>http://www.newtomato.me/blog/2017/11/05/blend-modezhe-dang-xiao-guo</id>
    <content type="html"><![CDATA[<p>在FEZ游戏中，经常会有这样的效果。人物移动到某些物品之后，只有形状可见。</p>

<p><img src="http://7xuepc.com1.z0.glb.clouddn.com/2017-11-05-15098910326144.jpg" alt="=" /></p>

<p>这样的效果，在早期的flash游戏中，会计算两个物品是否发生遮挡，然后对后面的个物品的像素的alpha进行处理。并在前面draw一下。改变遮挡关系。</p>

<p>Game Maker如何实现这样的效果呢？<br />
只用不到10行代码即可。性能远超我所想象。用不到CPU的计算。纯粹的GPU计算。</p>

<p>先看我的演示（请忽略我简单粗糙的画作）<br />
<img src="http://7xuepc.com1.z0.glb.clouddn.com/2017-11-05-a.gif" alt="a" /></p>

<p>当绿团子躲在障碍物后面，漏出了他的形状。这里用到的就是<code>gpu_set_blendmode_ext()</code> 函数。<br />
<!--more--></p>

<h2 id="section">原理</h2>

<p><code>gpu_set_blendmode_ext(bm_dest_alpha,bm_inv_dest_alpha)</code></p>

<p>这个函数最终起作用是因为如下的公式：</p>

<p><code>final_color = (source_pixel * bm_dest_alpha) + (dest_pixel * bm_inv_dest_alpha)</code></p>

<p>为了能看到前面的灰色的圆肚子，还是需要再次draw一遍。也就是这次draw才是source。下面的场景已经成为dest了。</p>

<p>所以这个你看到效果，按照层次分的话，应该是如下的样子：</p>

<p>最下面的是你能看到绿团子。<br />
绿团子上面是一层你看不到的透明。大小是以绿团子为准。<br />
然后是上面的障碍物。<br />
最后在此draw一个绿团子的形状的灰色形状的物品，完全按照绿团子的形状为准。</p>

<p>当绿团子在障碍物后面的时候，虽然看上去所有都是可见的。实际上，露出来的绿团子的像素对gpu而言“其实”是透明的。而障碍物那里是不透明的。<br />
此时在draw一个灰色团子形状的物品。按照上面的公式，不透明的地方自然就展示出来了。透明的地方，灰色就不展示了。</p>

<h2 id="section-1">源码</h2>

<p>绿团子代码：</p>

<p>draw event：</p>

<pre><code>
draw_self()
gpu_set_blendenable(false)

gpu_set_colorwriteenable(false,false,false,true)
x1 = x - sprite_xoffset
y1 = y - sprite_yoffset
draw_set_alpha(0)
//draw_set_color(c_blue)
draw_rectangle(x1,y1,x1+sprite_width,y1+sprite_height,false)

draw_set_alpha(1)
gpu_set_colorwriteenable(true,true,true,true)
gpu_set_blendenable(true)

</code></pre>

<p>draw end event：</p>

<pre><code>gpu_set_blendmode_ext(bm_dest_alpha,bm_inv_dest_alpha)

gpu_set_alphatestenable(true)
gpu_set_fog(true,c_gray,0,0.4);
draw_set_alpha(0.4)
draw_self()
gpu_set_fog(false,c_white,0,0)
gpu_set_alphatestenable(false)
gpu_set_blendmode(bm_normal)
</code></pre>

<h2 id="section-2">结语：</h2>

<p>game maker很多的黑魔法，都很值得学习。这里推荐几个我经常看的大神的频道。是他们无私的分享，才让我捡到这个漂亮的贝壳。</p>

<ol>
  <li><a href="https://www.youtube.com/user/999Greyfox">Shaun Spalding</a></li>
  <li><a href="https://www.youtube.com/user/uheartbeast">HeartBeast</a></li>
  <li><a href="https://www.youtube.com/user/PixelatedPope">PixelatedPope</a></li>
  <li><a href="http://www.davetech.co.uk/">David</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Game maker：Extend blend mode]]></title>
    <link href="http://www.newtomato.me/blog/2017/10/29/gamemakerblendmode"/>
    <updated>2017-10-29T23:00:17+08:00</updated>
    <id>http://www.newtomato.me/blog/2017/10/29/gamemakerblendmode</id>
    <content type="html"><![CDATA[<p>最近看到一款游戏，使用了<code>Extend blend mode</code>做了一个非常牛叉的特效。<br />
特效在此，大家先欣赏一下：<br />
<img src="http://www.davetech.co.uk/pages/gamemakersurfacedamage//twitter3.gif" alt="" /></p>

<p>作者将如何实现的效果在<a href="http://www.davetech.co.uk/gamemakersurfacedamage">这里</a>介绍了一下。</p>

<!--more-->

<p>里面最关键的代码就是：</p>

<pre><code>damagemask = surface_create(room_width, room_height)

surface_set_target(damagemask)
draw_sprite(spr_room1walls,0,0,0);
surface_reset_target();
	
/// obj_damage – draw
if (surface_exists(damagemask)) {
    draw_surface(damagemask,x,y)
}


...
draw_set_blend_mode(bm_substract)
draw_circle(x,y,random(10))
draw_line(...)
...

</code></pre>

<h2 id="section">原理介绍</h2>

<p><code>game maker</code>中surface是一个独特的存在，可以绘制任何物品上去，也可以将自己绘制到屏幕上。可以看成是画布。</p>

<p><code>game maker</code>的draw也比较独特，普通情况下，我们是<code>bm_normal</code>的模式，既覆盖的绘制。<br />
但是这里使用的是<code>bm_subtract</code>的方式，顾名思义就是将要画上去的东西裁减掉。比如上面绘制的是一个圆形和一条射击冲击波的line。则绘制的时候把这个圆形和line裁剪掉。</p>

<p>由此上面的效果，被枪射中，墙壁上留有痕迹的效果就出来了。</p>

<p>这么高级的功能，还需要继续深入的了解！</p>

<h2 id="drawsetblendmode">draw_set_blend_mode</h2>

<p>这方面的资源网络上比较少，现在在GM 2.0上已经改名为<code>gpu_set_blendmode_ext</code>,由此可以看出这个函数是在绘制的时候设置gpu的绘制模式。也就是不需要cpu的计算。</p>

<p>他有两个重要的参数。<code>gpu_set_blendmode_ext(src,dest)</code>。<br />
src是指：<code>the colour of the pixel we're going to draw</code>，即我们将要绘制的东西。<br />
dest是指：<code>the colour that's already in the pixel we're drawing to</code>，即我们已经绘制的东西，也就是说我们将<code>src</code>绘制到<code>dest</code>上。可以简单的认为dest是一个背景，在后面，src是个道具，在上面。</p>

<p>这里的概念很重要，因为绘制公式是在这个基础上绘制的。</p>

<p>绘制公式如下</p>

<pre><code>Rs * factor_src + Rd * factor_desc = new R
Gs * factor_src + Gd * factor_desc = new G
Bs * factor_src + Bd * factor_desc = new B
As * factor_src + Ad * factor_desc = new A

</code></pre>

<p>某一个像素点是如何被混合绘制出来的呢？就是上面的公式。将背景和前景的像素颜色值，按照上述公式计算出来一个新的颜色值。</p>

<p>两个参数还有一些默认值。<br />
<img src="http://7xuepc.com1.z0.glb.clouddn.com/2017-10-29-15092877037009.jpg" alt="" /></p>

<p><img src="http://7xuepc.com1.z0.glb.clouddn.com/2017-10-29-15092878217711.jpg" alt="=" /><br />
所以如何实现<code>bm_subtract</code>的效果呢？参数就是上面的<code>（bm_zero,bm_inv_src_colour）</code>,<br />
接下来我们套入到公式里面计算一下：</p>

<p>画出来的圆圈和线条，相当于都是遮罩，都是黑色的。因此就是#000000。<br />
<code>公式里面RGB颜色值是用0~1表示，就是百分比</code>。因此每个都是0。</p>

<pre><code>0 x 0 + Rd * 1 = Rd
0 x 0 + Gd * 1 = Gd
0 x 0 + Bd * 1 = Bd
1 x 0 + Ad * 0 = 0

</code></pre>

<p>因此这个像素点就被成了透明的。是不是就实现了画上去的东西，其实被扣除了效果呢？</p>

<h2 id="section-1">后续</h2>

<p>这个功能还没有结束，远远超过你的想象。大名鼎鼎的独立游戏《INK》也是采用这个原理制作的。<br />
<img src="http://7xuepc.com1.z0.glb.clouddn.com/2017-10-29-15092884978865.jpg" alt="" /></p>

<p>作者使用的方式是<code>（bm_dest_alpha ，bm_inv_src_alpha）</code>。</p>

<p>另外，在<code>reddit</code>上找了一份example工程，可以查看不同模式的组合带来不一样的体验哦。再次也分享给大家。<br />
<a href="https://pan.baidu.com/s/1gf1WFyr">百度云盘链接</a>：https://pan.baidu.com/s/1gf1WFyr 密码: 8u98</p>

]]></content>
  </entry>
  
</feed>
