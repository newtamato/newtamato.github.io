<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类:mac | 番茄手册]]></title>
  <link href="http://www.newtomato.me/blog/categories/mac/atom.xml" rel="self"/>
  <link href="http://www.newtomato.me/"/>
  <updated>2017-09-02T19:07:42+08:00</updated>
  <id>http://www.newtomato.me/</id>
  <author>
    <name><![CDATA[newtomato]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[MAC上安装git-svn未生效的办法]]></title>
    <link href="http://www.newtomato.me/blog/2017/06/11/macshang-an-zhuang-git-svnwei-sheng-xiao-de-ban-fa"/>
    <updated>2017-06-11T20:47:57+08:00</updated>
    <id>http://www.newtomato.me/blog/2017/06/11/macshang-an-zhuang-git-svnwei-sheng-xiao-de-ban-fa</id>
    <content type="html"><![CDATA[<h2 id="git-svn-">git svn 介绍</h2>

<p>git svn的原理就是服务器端还是svn服务器，但是本地使用git，这样可以本地保留git所有的功能，但是代码提交是需要提交给svn服务器的。<br />
git svn的命令可以认为和git是一样的。部分命令有些不同。</p>

<p><img src="https://git-scm.com/images/logo@2x.png" alt="" /> + <img src="https://tortoisesvn.net/assets/img/tortoisesvn_logo_hor468x64.5e0587de.svg" alt="svn" /></p>

<!--more-->
<p>例如克隆代码：</p>

<pre><code>git svn clone xxxx.git
</code></pre>

<p>初始化仓库：</p>

<pre><code>git svn init
</code></pre>

<p>提交代码到服务器：</p>

<pre><code>git svn dcommit
</code></pre>

<p>平时开发需要用到的命令，创建分支，本地提交，切换分支，合并分支都和git的命令相同。</p>

<h2 id="git-svn">安装git svn</h2>
<p>MAC上默认安装的git，理论上应该自带git svn的功能。但是这只是理论上，验证是否支持svn，只要在terminal测试下。<br />
输入<code>git svn --help</code>没有报错。那恭喜你了，不需要经历我这一番折腾了。</p>

<p>如果不是，请继续往下看。</p>

<p>先说一下我的工作环境，我的操作系统是<code>MAC OS Sierra</code>。Git的版本是通过<code>homebrew</code>安装的，安装版本是<code>2.11.1</code>。<br />
这个版本的git，竟然不支持git svn的命令的。于是到Git的<a href="https://git-scm.com/docs/git-svn/1.8.5">官方网站</a>，搜索了一下，他们从1.8.5版本之后就开始支持这个命令了。<br />
所以我分析有可能brew安装的git只是一个不完整版本。于是我在官方网站重新下载了Git。开始安装。</p>

<p>安装完成之后，通过命令行检查版本，还是老版本。没有变化。于是通过<code>which git</code>发现使用的位置是<code>/usr/local/bin/git</code>，于是将我安装的git做了一个软连接覆盖了这里的git。我安装之后的位置在<code>/usr/local/git</code>。</p>

<pre><code>ln -s /usr/local/git /usr/local/bin/git
git --version
</code></pre>

<p>输出就是最新的安装版本了。<code>git version 2.13.0</code>。</p>

<h2 id="section">安装完成却遇到了另一个问题</h2>

<p><code>git svn --help</code>之后没有出现我预期的输出，反而报错了。</p>

<p>错误如下：</p>

<pre><code>Can't locate SVN/Core.pm in @INC (you may need to install the SVN::Core module) (@INC contains: /usr/local/git/lib/perl5/site_perl/5.18.2/darwin-thread-multi-2level /usr/local/git/lib/perl5/site_perl/5.18.2 /usr/local/git/lib/perl5/site_perl /Library/Perl/5.18/darwin-thread-multi-2level /Library/Perl/5.18 /Network/Library/Perl/5.18/darwin-thread-multi-2level /Network/Library/Perl/5.18 /Library/Perl/Updates/5.18.2 /System/Library/Perl/5.18/darwin-thread-multi-2level /System/Library/Perl/5.18 /System/Library/Perl/Extras/5.18/darwin-thread-multi-2level /System/Library/Perl/Extras/5.18 .) at /usr/local/git/lib/perl5/site_perl/Git/SVN/Utils.pm line 6.
BEGIN failed--compilation aborted at /usr/local/git/lib/perl5/site_perl/Git/SVN/Utils.pm line 6.
Compilation failed in require at /usr/local/git/lib/perl5/site_perl/Git/SVN.pm line 25.
BEGIN failed--compilation aborted at /usr/local/git/lib/perl5/site_perl/Git/SVN.pm line 32.
Compilation failed in require at /usr/local/git/libexec/git-core/git-svn line 21.
BEGIN failed--compilation aborted at /usr/local/git/libexec/git-core/git-svn line 21.
</code></pre>

<p>这一坨报错消息让人摸不着头脑，于是Google一下，果然有人和我报一样的错误。</p>

<p>解决方案<a href="https://stackoverflow.com/questions/16578465/on-osx-using-sourcetree-git-svn-getting-cant-locate-svn-core-pm-in-inc">在此</a>,如果你打不开，那就按照我下面的命令设置一下。看看效果吧！</p>

<pre><code>sudo mkdir /Library/Perl/5.18/auto
sudo ln -s /Applications/Xcode.app/Contents/Developer/Library/Perl/5.18/darwin-thread-multi‌-2level/SVN /Library/Perl/5.18/darwin-thread-multi-2level
sudo ln -s /Applications/Xcode.app/Contents/Developer/Library/Perl/5.18/darwin-thread-multi‌-2level/auto/SVN /Library/Perl/5.18/auto/
</code></pre>

<h2 id="section-1">结语</h2>

<p>幸运的话，<code>git svn --help</code>就会正确工作了。好了开始享受用Git方式管理svn仓库吧！</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MAC上面搭建PHP开发环境]]></title>
    <link href="http://www.newtomato.me/blog/2016/05/15/mac-apache-php"/>
    <updated>2016-05-15T22:37:05+08:00</updated>
    <id>http://www.newtomato.me/blog/2016/05/15/mac-apache-php</id>
    <content type="html"><![CDATA[<p>最近抽空在MAC上尝试搭建一个PHP开发环境，把从github上找到的一些开源的框架运行起来。<br />
由于曾经做过这样的工作，以为是轻车熟路，结果自己也是踏错不少坑。现在记录总结下来，免于日后辛苦。<br />
<!--more--><br />
首先，我的电脑环境是10.11.4 EI Caption版本。<br />
MAC本身自带了一个php开发环境。如何验证呢？<br />
只要你打开命令行，输入如下命令<br />
<img src="/images/1463305012104.png" alt="Alt text" /><br />
能看到反馈，就证明电脑自带php，我们只需要做一些Apache的配置即可。<br />
Apache的目录在<code>/etc/apache2</code>，我们通过命令行进入即可。<br />
进去之后，打开http.conf文件，查找到Document这个标签，你会看到他定义的目录位置<br />
<img src="/images/1463306474896.png" alt="Alt text" /><br />
暂时先不要改这个地方。<br />
我们先到<code>/Library/WebServer/Documents</code>下面看看。这个文件夹下面有什么？<br />
<img src="/images/1463306562923.png" alt="Alt text" /><br />
这里面有一个index.html.en文件。<br />
ok，此时我们启动Apache<br />
启动命令<code>sudo apachectl start</code><br />
关闭命令<code>sudo apachectl stop</code><br />
重启命令<code>sudo apachectl restart</code></p>

<p>启动Apache之后，打开浏览器，输入<code>http://localhost</code> ，此时我们会看到 <strong>It Works!</strong>。此时Apache就已经正常的启动了。</p>

<p>他的webroot就是上面提到的<code>/Library/WebServer/Documents</code><br />
现在需求是，需要修改这个目录，将他指向到我们要的目录。<br />
直接修改这个文件可以么？<br />
比如我们的目录位置是<br />
%{HOME_PATH}/app<br />
先来尝试修改一下。</p>

<pre><code>DocumentRoot "%{HOME_PATH}/app"
&lt;Directory "%{HOME_PATH}/app"&gt;
</code></pre>
<p>%{HOME_PATH}换成你自己的用户目录即可。</p>

<p>然后在这个目录中增加一个index.php文件。内容如下</p>

<pre><code>&lt;?php
print("hello,world");
echo phpinfo();
</code></pre>

<p>ok，准备就绪，重启Apache即可。<br />
然后浏览器打开 <code>http://localhost</code><br />
看到了什么了么？<br />
没错不在是我们上面的It Works而是如下这样的截图，他就是讲Apache的运行配置输出到浏览器中了。<br />
<img src="/images/1463307832738.png" alt="Alt text" /></p>

<p>这是修改我们目录最简单的一步。<br />
接下来，我们可以尝试修改配置，增加虚拟主机。这个工作大部分Apache都为我们做了，我们现在配置即可。<br />
首先打开httpd.conf,查找到httpd-vhosts这个单词，找到他对应的行，将注释去掉</p>

<pre><code># Virtual hosts
Include /private/etc/apache2/extra/httpd-vhosts.conf
</code></pre>

<p>然后到<code>/etc/apache2/extra</code>下面打开httpd-vhosts.conf这个文件。在里面按照下面这个模板增加一些配置。</p>

<pre><code>&lt;VirtualHost *:80&gt;
     DocumentRoot "%{your webdocumen name}"
     ServerName %{your domain name}
     ErrorLog "/private/var/log/apache2/sites-error_log"
     CustomLog "/private/var/log/apache2/sites-access_log" common
     &lt;Directory /&gt;
                Options Indexes FollowSymLinks MultiViews
                 AllowOverride None
                 Order deny,allow
                Allow from all
      &lt;/Directory&gt;
&lt;/VirtualHost&gt;
</code></pre>

<p>比如我们此处，将<code>%{your webdocumen name}</code>替换成上面的%{HOME_PAHT}/app，然后<code>%{your domain name}</code>替换成<code>myapp.com</code>。<br />
同时讲myapp.com在<code>/etc/hosts</code>中进行如下配置</p>

<pre><code>127.0.0.1 myapp.com
</code></pre>

<p>然后重启Apache。浏览器中敲入<code>http://myapp.com</code></p>

<p>如果你能够看到和上面一样的hello，world的输出，那么你就大功告成了！</p>

]]></content>
  </entry>
  
</feed>
