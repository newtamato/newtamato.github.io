<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类:第三方接入 | 番茄手册]]></title>
  <link href="http://www.newtomato.me/blog/categories/di-san-fang-jie-ru/atom.xml" rel="self"/>
  <link href="http://www.newtomato.me/"/>
  <updated>2016-09-18T16:16:23+08:00</updated>
  <id>http://www.newtomato.me/</id>
  <author>
    <name><![CDATA[newtomato]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[整合FB广告步骤总结]]></title>
    <link href="http://www.newtomato.me/blog/2016/07/30/zheng-he-fbyan-gao-bu-zou-zong-jie"/>
    <updated>2016-07-30T12:09:50+08:00</updated>
    <id>http://www.newtomato.me/blog/2016/07/30/zheng-he-fbyan-gao-bu-zou-zong-jie</id>
    <content type="html"><![CDATA[<p>上一篇讲到整合Google广告到项目中，这次我们讲讲如何将FB的广告整合进来。</p>

<p>当然，使用FB的SDK，同样也需要翻墙。</p>

<p>首先我们先到FB的官方网站上面注册自己的应用。<br />
然后找到Facebook Audience Network的入口。在这里注册自己项目的基本信息。<br />
最后能够得到一个placementId，这个是我们最终需要用到的东西。<br />
然后开始集成 Facebook Audience Network 的SDK。<br />
<!--more--></p>

<h3 id="ios">整合到ios</h3>

<p>Facebook提供了两种方案实现。<br />
<strong>一种方案是使用POD方式</strong>，<strong>一种方案是自行下载FBAudienceNetwork的SDK</strong>，然后解压缩，将framework拖拽到项目库中。我个人比较推荐使用pod方式，如果依赖的库升级了，使用<code>pod update</code>就可以及时更新。省事省力省心。</p>

<ol>
  <li>使用pod 方式。首先在自己的项目目录下面，新建一个<strong>podfile</strong>文件。写入<code>pod 'FBAudienceNetwork'</code>。</li>
  <li>在项目目录下面，输入如下命令行<code>pod install</code>，pod命令会自行检查相关依赖库，然后将其下载下来。并且重新生成一个新的工程文件<code>xxx.xworkspace</code>。</li>
  <li>打开xworkspace的工程文件。在UIViewController的继承子类中修改代码如下</li>
</ol>

<pre><code>class GameViewController: UIViewController ,FBAdViewDelegate {
	override func viewDidLoad() {
        super.viewDidLoad()
        let adView:FBAdView = FBAdView.init(placementID: "221630757971535_844119255722679",
        adSize: kFBAdSizeHeight50Banner, rootViewController: self)
        adView.delegate = self;
        adView.loadAd();
        self.view.addSubview(adView);
    }
    ...
</code></pre>

<ol>
  <li>然后运行代码即可。成功之后你会在屏幕顶端看到FB的广告。</li>
</ol>

<h3 id="android">整合到Android</h3>

<p>Facebook同样也是提供了两种方案实现。<br />
如果使用的是Android Studio，那么就可以使用<strong>gradle</strong>的方式，类似pod,也是写入配置，然后交由Android Studio来自行下载库。<br />
或者开发者自行下载sdk，解压缩之后将里面的AndienceNetwork.jar包拖到项目的libs文件夹下面。</p>

<p>接下来修改<strong>AndroidManifest</strong>文件，因为他需要有网络权限。因此需要增加如下两句权限配置</p>

<pre><code>    &lt;uses-permission android:name="android.permission.INTERNET"/&gt;
    &lt;uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/&gt;
</code></pre>

<p>然后在我们的MainActivity修改成如下代码</p>

<pre><code>public class MainActivity extends AppCompatActivity {

    private AdView adView;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        // Instantiate an AdView view
        adView = new AdView(this, "${从facebook申请到的placementId}", AdSize.BANNER_HEIGHT_50);

        System.out.print("R.layout.content_main");
        // Find the main layout of your activity
        RelativeLayout layout = (RelativeLayout)findViewById(R.id.content);

        // Add the ad view to your activity layout
        layout.addView(adView);
        adView.setAdListener(new AdListener() {

            @Override
            public void onError(Ad ad, AdError error) {
                System.out.print("on error to show ");
            }

            @Override
            public void onAdLoaded(Ad ad) {
                System.out.print("onAdLoaded ");
            }

            @Override
            public void onAdClicked(Ad ad) {
               
                System.out.print("onAdClicked");
            }

        });
			//第一次运行会在控制台输出此设备id，第二运行才会出现广告
        AdSettings.addTestDevice("%{设备id}");

        // Request to load an ad
        adView.loadAd();
    }
</code></pre>

<p>此时在运行Android Studio，就可以在设备或者模拟器上看到广告了。文档里面说模拟器是不需要设备id的，但是我没有设备id，在模拟器上是看不到的。加上设备id，就可以看得到了。</p>

<p>至此FB广告整合就结束了，是不是非常简单？但是在实际操作中总会遇到其他各色的问题。但是请放心，只要翻墙翻得好，问题都会好！</p>

]]></content>
  </entry>
  
</feed>
