<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类:android | 番茄手册]]></title>
  <link href="http://www.newtomato.me/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://www.newtomato.me/"/>
  <updated>2016-09-18T16:16:23+08:00</updated>
  <id>http://www.newtomato.me/</id>
  <author>
    <name><![CDATA[newtomato]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[节省开发时间的几种方案总结]]></title>
    <link href="http://www.newtomato.me/blog/2016/06/09/jie-sheng-kai-fa-shi-jian-de-ji-chong-fang-an-zong-jie"/>
    <updated>2016-06-09T14:31:39+08:00</updated>
    <id>http://www.newtomato.me/blog/2016/06/09/jie-sheng-kai-fa-shi-jian-de-ji-chong-fang-an-zong-jie</id>
    <content type="html"><![CDATA[<p>我们框架使用的是cocos2d-x。它支持ios和Android的开发。传统的开发，肯定是ios使用xcode，Android使用eclipse。eclipse同时还要配置一些模拟器。如果环境搭配的好，并且配置的电脑性能高，运行起来是可以接受的。但是我们的环境略微艰苦一点。使用Mac Mini，启动xcode很慢，更别提启动eclipse了。更是慢上加慢。为此浪费了我们不少时间。并且一直在想怎么样能够缩减开发时间。最后功夫不负有心人吧。找到了几种方法。分享出来给大家，希望也能解决你遇到这个问题。<br />
<!--more--></p>

<blockquote>
  <p>使用触控官方提供的Player模拟器。</p>
</blockquote>

<p><strong>优点：</strong><br />
配置简单。只要配置Quick的环境变量，就可以运行，然后设置我们的工程目录，就可以运行我们的项目了。而且这个运行起来相对于ios的模拟器还快一些。并且能够调整屏幕分辨率。</p>

<p><strong>缺点：</strong><br />
展示解决了ios模拟器的问题，Android模拟器还是需要在eclipse上测试。<br />
自从mac升级到10.11之后，player就不能够正常运行了。即使用源码重新编译也是无法运行。</p>

<blockquote>
  <p>由于lua的特性，我们在平时开发中就采用这种更新机制。讲修改的代码文件拷贝到更新文件夹下面。</p>
</blockquote>

<p><strong>优点：</strong><br />
不用每次都重新启动模拟器。在我们游戏中，重新加载新代码的时机是用户某一次面板切换。因此copy完之后，切换一次面板就ok。<br />
这样省去了一次项目启动的时间。不管是ios还是Android</p>

<p><strong>缺点：</strong><br />
这样做，需要开发同学手动拷贝代码，在ios上面的更新文件夹，有的时候是变化的。不小心在模拟器上卸载之后，或者切换模拟器之后，文件夹位置就变了。踩这个坑也是让人心酸哦。</p>

<blockquote>
  <p>直接在Android模拟器上做测试。我此处推荐的是海马模拟器。安装海马模拟器是我见过最简单的过程。比Genymotion简单许多。安装了他之后，可以设置一个共享文件夹。就是这个共享文件夹让我灵光一闪。将我们项目做成共享文件夹。然后在海马模拟器上找到更新文件夹，将assets做成共享文件夹的一个软链。代码也做成共享文件夹的一个软链接。这样只要项目变化了，能直接变化更新文件。在海马上启动我们的模拟器</p>
</blockquote>

<p><strong>优点：</strong><br />
启动快，不用拷贝代码，节省时间。且直接在Android模拟器上测试。开发完成之后，直接就可以上发布给QA同学测试了。</p>

<p><strong>缺点：</strong><br />
暂时没有发现，如果有，我后续更新！</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在海马模拟器上运行并测试游戏]]></title>
    <link href="http://www.newtomato.me/blog/2016/06/08/hai-ma-mo-ni-qi"/>
    <updated>2016-06-08T16:34:12+08:00</updated>
    <id>http://www.newtomato.me/blog/2016/06/08/hai-ma-mo-ni-qi</id>
    <content type="html"><![CDATA[<p>海马模拟器是我现阶段用过的比较快速稳定的模拟器了。<br />
且能够满足我们日常的开发需求</p>

<ol>
  <li>快速安装并启动游戏。便于我们测试。</li>
  <li>取出自动更新的文件内容。辅助我们检查是否是自动更新出现了问题。</li>
</ol>

<!--more-->
<p>首先如果要查看文件在手机里面的内容，就要将手机设为root模式。</p>

<ol>
  <li>打开文件管理器-&gt;设置(右上角)-&gt;常规设置-&gt;高级选项。在此处设置为超级用户访问模式。</li>
  <li>设置共享文件夹。<br />
 打开设备上面设置<br />
 <img src="http://7xuepc.com1.z0.glb.clouddn.com/2016-06-08-14653734292772.jpg" alt="" /><br />
 然后在弹出的面板上选择<strong>共享文件夹</strong>，在电脑上选择一个与他同步的文件夹。<br />
 此时设置好之后，模拟器会跳转到如下文件夹中<br />
 <code>/mnt/sdcard/droid4xshare/</code></li>
  <li>
    <p>开始选择一个游戏，能够自动更新最好。自动更新之后的文件一般会存在如下的位置<br />
 <code>/data/data/com.xxx.xxx.xxx/files</code>下面。</p>

    <p>好了，是不是非常简单？</p>

    <p>如果使用Genymotion的时候，可以同adb devices和adb shell的方式访问模拟器的内容。<br />
 但是海马模拟器似乎并不可以。<br />
 为了能够有更好的逼格，所以我搜索了一下，查找到如下的解决方案<br />
 在命令行中输入</p>
  </li>
</ol>

<pre><code>	&gt; adb connect 192.168.56.101
	already connected to 192.168.56.101:5555
	&gt; adb devices
	List of devices attached
	192.168.56.101:5555	device
	&gt; adb shell
</code></pre>

<p>然后此时我们就能够用命令的方式访问了！</p>

]]></content>
  </entry>
  
</feed>
