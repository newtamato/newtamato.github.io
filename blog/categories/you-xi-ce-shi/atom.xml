<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类:游戏测试 | 番茄手册]]></title>
  <link href="http://www.newtomato.me/blog/categories/you-xi-ce-shi/atom.xml" rel="self"/>
  <link href="http://www.newtomato.me/"/>
  <updated>2017-04-15T15:07:07+08:00</updated>
  <id>http://www.newtomato.me/</id>
  <author>
    <name><![CDATA[newtomato]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[关于自动化测试的一些思考]]></title>
    <link href="http://www.newtomato.me/blog/2016/05/29/zi-dong-hua-ce-shi"/>
    <updated>2016-05-29T17:12:45+08:00</updated>
    <id>http://www.newtomato.me/blog/2016/05/29/zi-dong-hua-ce-shi</id>
    <content type="html"><![CDATA[<p><img src="http://7xuepc.com1.z0.glb.clouddn.com/2016-05-29-%E6%9C%BA%E5%99%A8%E4%BA%BA.jpg" alt="机器人-w300" /></p>

<p>之所以想到自动化测试，是因为想要能够从技术的角度解决一些我们经常的重复性的工作。<br />
重复性的工作特别多，如果能够有一套合适的工具，比如有一个智能一点的机器人，辅助我们，而我们只要在喝一杯咖啡的时间，回来就能够看到测试的结果，那么能够省去我们不少的精力和时间。</p>

<p>对于游戏开发测试而言，我们经常要做的就是对某个功能不断的测试。比如如下的情况。</p>

<blockquote>
  <p>购买一个道具。<br />
点击按钮触发面板弹出，触发相关动画和界面数据的相关初始化操作。此次为一个二次确认面板。<br />
点击购买。<br />
开始发出通讯请求。<br />
然后响应回来。根据服务器发来的数据决定此次操作是否合法。<br />
如果合法，则弹出相关的面板和动画。<br />
如果不合法，则也是弹出面板提示用户。</p>
</blockquote>

<!--more-->

<p>这样的细小的逻辑，经常是功能测试人员所需要检查的。大部分自动测试工具也做不到如此细致的检查。</p>

<h2 id="section">测试工具</h2>

<ol>
  <li>
    <p>###按键精灵和AutoTouch<br />
**	必须使用越狱的苹果手机上面**<br />
 用过这两个工具的人都差不多知道他们是来做什么的，就是能够录制用户的操作，然后通过回放的功能将操作重新跑一边。这能够满足一些需求，但是要求屏幕上出现固定位置的按钮之类的触发，如果换了位置。那他就不起作用了。<br />
 AutoTouch还能够编写部分lua脚本，通过一些位置信息或者颜色信息等函数来自定义一些逻辑。确保我们触发正确的位置。<br />
 但是他们都有一个共同的缺点就是，他们要求此次执行的时序之间的时间必须一致。如果本次录制的时候，A点和B点之间触发的时间为1s，下次再回放的时候，机器性能有些许偏差，成了0.8s，那么B点的点击就失效了。这样自动测试也就失败了。<br />
 <strong>同时，这样的工具只能负责点击，而对于具体操作结果是怎么一回事，就无能为力了。</strong><br />
 比如，我们购买道具，如果支付成功。接下来，我们可能继续购买，但是如果失败，就弹出界面通知。按照录制的操作，此处失败的购买就会导致原先的录制回放失败。</p>
  </li>
  <li>
    <p>###TouchTest Lite<br />
<img src="http://7xuepc.com1.z0.glb.clouddn.com/2016-05-29-TouchTestLogin.png" alt="TouchTestLogin-w200" /></p>

    <p>他们的官方网站做的视频介绍<a href="https://www.soasta.com/blog/touchtest-lite-part-1/">在此</a>。从视频上面可以看出，他们是将我们的应用的点击事件全部发送到了自己的服务器上面（前提是我们在他们的服务器上面先注册，才能够做测试）。然后通过后台管理，点击录制，收集点击事件。才能做成回放处理。这样有一个好处在于不必越狱手机即可使用。<br />
 但是这样也依赖于网络请求，如果网络环境差，我们的录制就很有可能失败。<br />
 不过看到他们这样的产品还提供各种工具和Example，我就忍不住下载下来尝试一番。可惜的是，到目前为止总是出现，设备不匹配的错误。后台认为已经connected了，但是启动应用总是不能成功的录制。十分可惜。</p>
  </li>
  <li>
    <p>图像对比,控件识别<br />
 在自动化测试中，空间识别是比较重要的，因此记录点击的坐标在不同的分辨率的设备上有的时候是不起作用的，但是如果能够识别空间，那么一切就方便许多。因此会出现类似<strong><a href="http://my.oschina.net/u/940726/blog/103328">White</a></strong>这样的工具。但是这个工作我现在的项目是用不到的。<br />
 但是对于我们的项目，暂时没有找到合适的控件识别工具。<br />
 于是对于UI界面上是否正确的测试，我想到的是图像对比，我们事先提供一张正确的图片，然后将结果图片和此张图片进行对比。如果对比成功，那么UI测试就没有问题。<br />
 这样对我们截图图片的时机就要求很严格。如果有动画，动画时间较长，就需要等待动画截至之后做截屏。然后比较。这样一来，就需要具体时机具体判定了。</p>
  </li>
</ol>

<h2 id="section-1">解决方案</h2>
<p>综合以上的考虑，我能想到解决我们工作需求的自动化测试工具就是一套自己开发的解决方案。<br />
我们要知道，一次操作的具体返回。成功是什么操作，失败又是什么操作。<br />
这套解决方案，要能够提供如下的功能</p>

<ol>
  <li>单纯的录制，单纯的回放，比如购买，成功。失败的情况可以不处理。</li>
  <li>触发功能。比如点击购买，剩下的事情便交给AI智能的处理。</li>
</ol>

<p>第一条单纯的录制，是比较简单地，只要把用户的操作都记录下来，如实的播放出来即可。<br />
第二条就需要特殊处理。</p>

<p><img src="http://7xuepc.com1.z0.glb.clouddn.com/a.png" alt="流程图-w400" /></p>

<p>A面板的controller肯定有这两个与控件绑定的函数。<br />
调用购买确认函数，一定会触发购买是否成功的逻辑函数.<br />
而这个时候，我们只要再此函数中将各种条件判定做处理，拿到返回结果保存起来。等我们喝完咖啡回来，就能看到明确的展示。对结果做一些可视化的展示，效果更佳。</p>

<p>这需要在代码中增加许多代码，对开发这个功能的程序员便有额外工作。但是这样做有极大的好处，他能让很快检测我们自己的工作是否有疏漏。也能加快测试时间。</p>

<p>其实我们在开发中，还有一些问题需要注意，就是数据的变化，尤其是在和服务器通讯前后。比如此次购买。<br />
在购买成功前后对会发生变化的数据做一个profile。我们对变化的数据是清楚的，购买一个道具需要50金砖。占用1个背包格子等这些数据变化。然后在购买结束之后，对这些变化的数据做unittest。如果不符合变化，那么就证明此次购买出现了问题。</p>

<p>这样既能保证数据的正确又能够节能人力，很快看到一个清晰的结果。</p>

<p><strong>上述，是我个人一些想法，也正在努力的希望自己能够按照这个思路开发出一套合适我们自己的测试工具。<br />
我的这套思路其实并没有解决所有问题，比如图像识别，如果真的要做这样的功能，上我上面提到的，需要截取图像的时机正确，并且不能发生变化太多。购买之后，肯定会界面上钱发生变化。物品数量发生变化。如果和要对比的图片钱和物品数量不一样，那本来是正确的也会判定不正确。所以做起来是比较麻烦的。<br />
所以如果真的有一天，科技的发展到机器人智能时代，我们给他们设定一些程序。通过他们的点击和图像识别能力，辅助我们测试工作。那么我相信这样的自动化测试才是最完美的测试。真心期待那一天的到来。</strong></p>

]]></content>
  </entry>
  
</feed>
