<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类:apk | 番茄手册]]></title>
  <link href="http://www.newtomato.me/blog/categories/apk/atom.xml" rel="self"/>
  <link href="http://www.newtomato.me/"/>
  <updated>2017-05-14T17:55:16+08:00</updated>
  <id>http://www.newtomato.me/</id>
  <author>
    <name><![CDATA[newtomato]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用Android Studio制作多个渠道包]]></title>
    <link href="http://www.newtomato.me/blog/2017/01/10/shi-yong-android-studiozhi-zuo-duo-ge-qu-dao-bao"/>
    <updated>2017-01-10T20:24:50+08:00</updated>
    <id>http://www.newtomato.me/blog/2017/01/10/shi-yong-android-studiozhi-zuo-duo-ge-qu-dao-bao</id>
    <content type="html"><![CDATA[<p>以前制作多个渠道包的方法是这样子的，在AndroidMenifest.xml里面放置一个的变量。例如</p>

<pre><code>&lt;meta-data android:name="dksdk_channel" android:value="CHANNEL_CHANNEL_VALUES" /&gt;

</code></pre>
<p>然后对生成的apk分析，替换里面的SETTING_UMENG_CHANNEL_CHANNELID_VALUES，重新打包就可以了。</p>

<p>这段时间从Eclipse迁移到android studio上面，发现android studio里面有<code>flavor</code>的一个特殊存在，不太了解，Google了一下，发现这个东西正好可以解决我们多平台制作apk的需求。<br />
<img src="http://7xuepc.com1.z0.glb.clouddn.com/2017-01-10-14840497981415.jpg" alt="-w250" /><br />
<!--more--><br />
接下来直奔主题吧！<br />
首先，我们在AndroidManifest.xml文件中定义一个变量<code>"${channcelValue}"</code>。<br />
其次，打开工程对应的Setting设置<img src="http://7xuepc.com1.z0.glb.clouddn.com/2017-01-10-14840500315961.jpg" alt="" /><br />
在中间空白列下面点击+依次添加渠道，右侧对应的就是平台的特殊性。比如有的平台有自己的特殊包名，可以修改Application Id,这样编译之后，此id会替换androidmanifest里面的包名。<br />
第三，打开工程对应的build.gradle文件，你会发现里面多了个<code>productFlavors</code>的配置，刚好是你刚刚配置的东西。在对应的每个平台或者渠道下面，增加<code>manifestPlaceholders = [platformValue:1]</code>。<br />
我的配置如下：</p>

<pre><code>   productFlavors {
        platform_1 {
            manifestPlaceholders = [platformValue: "平台1号"]
            minSdkVersion 15
            targetSdkVersion 15
        }
        platform_2 {
            manifestPlaceholders = [platformValue: "平台2号"]
            minSdkVersion 11
            targetSdkVersion 11
        }
        platform_3 {
            manifestPlaceholders = [platformValue: "平台3号"]
            minSdkVersion 11
            targetSdkVersion 11
        }
        platform_4 {
            manifestPlaceholders = [platformValue: "平台4号"]
            minSdkVersion 11
            targetSdkVersion 11
        }
    }	
</code></pre>

<p>大功告成！</p>

<p><strong>PS:</strong><br />
但是这样之后，发现每次debug，都是debug某一个平台，如何指定debug特定的平台？继续Google，发现在android studio左下角，有一个<code>build variants</code>的地方，点开，就可以选择你想要debug的平台了。</p>

]]></content>
  </entry>
  
</feed>
